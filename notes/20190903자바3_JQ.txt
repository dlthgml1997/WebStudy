	<Ajax> Ascynchronous JavaScript & XML
자바스크립트로 서버와 클라이언트(웹브라우저)사이 "비동기 통신-화면 refresh X" - XML데이터를
(백엔드는 동기 통신-화면이 refresh - html페이지는 그대로)

)CSV(=Comma Seperated Value)

	동기통신 process(전화)	ex)검색결과창으로	|	비동기 통신 process(우편)	
	서버에 요청				|	서버에 요청
	"응답 계속 기다림"				|	응답"기다리지 않고" 다른 로직 실행
	응답된 데이터 획득및 사용			|	응답된 데이터가 있을 경우 획득 및 사용
							
Ajax의 비동기 방식 예시)네이버 검색어 자동완성(onkeyup), 구글 맵 드래그
페이지 이동없이 화면을 동적으로 변경, 불필요한 데이터요청을 최소화해서 서버측 부담 감소

			      *<Ajax 실행 process>*
	웹브라우저						웹서버
	   JS요청객체<3. http요청하기> ------->	<------- <5. 응답(결과전송)>서버프로그램
				                 		 (XML, JSON, HTML, CSV, Text등)
	0. html(화면)					
	1. 이벤트 발생						4. 처리(controller/model 실행 및 view로 응답
	2. "Ajax통신객체(=XHR객체 = XMLHttpRequst !!)" 생성
	6. 결과 받아서 화면에 반영(응답 처리 메소드 실행)

xhr객체의 데이터 중 readystate>
	0: open() 호출되기 전
	1: open() 호출됨
	2: send() 호출됨
	3: server로 부터 data가 오는 중
	4: server에서 data가 모두 도착 완료
responseText> 서버에서 보내준 데이터를 여기에 받는다
responseXML>

)jsp에서 <% //java code 적는 곳 %>

	<JSON> - 자바스크립트에서 객체 표현
텍스트 기반의 경량 데이터 변환 포멧
1. 배열구조 [value, ,,,]
2. 컬렉션데이터구조 {"key":value,,,,} 
	key는 항상 "string문자열" : value는 JSON데이터 -> 2중 컬렉션 데이터 구조 가능

////eval("")은 ""를 떼고 안에것을 적용시키는 함수!
var x = eval("("+ {  JSON형식의 데이터 key:val, key:val } +")");  //배열형식인 경우 ()를 붙이지 않아도 됨
		->JSON형식의 (문자열) 데이터를 자바스크립트 "JSON 객체 x"로 변환
		x['key'] 또는 x.key로 키를 통해 JSON데이터에 access할 수있다.
		둘의 차이)
		var y = 'name';일 때 x[y]는 키가 'name'인것을 찾지만 x.y는 키가 y인것을 찾는다!! ([]는 변수처리가 되지만 .뒤에는 변수가 아니고 그냥 바로 key가 와야함)

	<JQuery> .js파일 1개로, <script src=로 추가해준다.
JavaScript Library(framework) 편리한 기능의 함수 제공, 다양한 플러그인

https://jquery.com/download/#using-jquery-with-a-cdn
CDN = Content Delivery Network = 중간서버(본서버보다 물리적으로 가까운데 위치하고 서버의 내용이 로딩되어있는 중간 서버)
그냥 본서버에서 다운로드 받아서 해도 되지만 <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>를 써주면 중간서버에서 적용이 된다.

	<$(selector).action();> 
$ : jquery sign
selector : html elements "선택자"
action() : 선택된 element에 대해 실행할 동작
ex) $("p").hide(); //html내에서 <p>태그를 모두 찾아 숨긴다.
//$();안에 태그이름을 쓰지 않고 내용을 적는다면 태그가 새로 생성됨!!

	<selector=선택자> ,로 여러개 구분한다.
1. ("*")는 모든 elements
2. ("#id이름") 
3. (".class이름")

("태그이름 : first/last/even/odd")
("태그이름 : nth-child(2)/first-child/first-of-type")

("[속성이름]") 속성을 가진 element 전부를 찾음
(":type값") type="type값"인 element 전부를 찾음

jquery event> ex)Document ready event
	이벤트핸들러> 
		$(selector).이벤트(function(){
			//이벤트가 발생했을 경우의 동작 작성
		});
	이벤트핸들러 3가지 방식 외우기~	

html문서를 브라우저로 실행할 때 script(-jQuery이용) 실행 후 body 실행
	-> "body까지 실행후(=브라우저에 HTML문서의 로딩이 끝난 후)" jquery를 실행되도록 해주어야 함!! => by 이벤트
$(document).ready(
	function(){
		//jQuery 메서드는 여기 들어간다!
	}
);

참고)브라우저에서 소스보기 했을 때 코드는 "처음 html문서가 로딩되었을 때" 코드!

////부모태그 내부에 자식태그를 넣는 방법!!!
부모.append(자식);
자식.appendTo(부모);
$('img').first().appendTo('body);는 처음 자식을 마지막 자식으로 이동시킨다~

////타이머함수_p.493
setInterval(function(){}, 2000); 2초마다 함수를 실행
