JavaScript 객체지향형언어("JavaScript기본내장객체+브라우저내장객체(HTML DOM)+직접만든 객체" 등 활용)      / jQuery  --Ajax
			w3스쿨/책목차에서 각각의 종류를 구분하자!!!!
	JS객체 : String, Math, Array, Object, JSON, Number, Date
	Browser제공 객체(BOM) : Window, Document, Location

문서객체모델 DOM -> html의 모든 태그를 객체로 사용할 수 있게 함. -> 메소드 활용가능
(Window, location, history)

다운로드되어서 클라이언트쪽에서 실행되는 언어 = Script언어(소스보기 하면 보임)
서버쪽에서 실행되는 언어 = BackEnd언어

	<JS> - css처럼 html의 head안에서 사용(body보다 먼저 실행됨!)
		<script 까지만 치고 자동완성
		src=" "로 외부 파일 형식 사용가능
동적언어(실행할 때마다 달라질 수 있음)
브라우저에서 디버깅툴을 활용해야 한다.

데이터타입 : 숫자형, 문자형, 논리값, null값.
변수> 데이터를 저장하기 위해 컴퓨터내의 메모리영역에 이름을 붙여 사용하는 값의 단위
변수에 넣어주는 값에 따라 타입이 자동으로 지정된다~(따로 데이터타입을 지정하지 않아야한다!!!!)
var키워드를 붙이고 함수내에서 선언하면! 지역변수가 된다.
	var name = "hi";	//지역변수(메소드 안에 들어있는 변수 처럼)
	name = "hi";	//전역변수(멤버필드의 변수 처럼)

함수>function키워드로 정의 - 이름, 매개변수, (리턴타입은 없음)		 <head>안에서 "정의"
	function 함수이름(매개변수들){
		(return 20;)
	}
함수도 객체/데이터로 인식!
window의 내장함수들을 많이 사용한다(window.메서드만 앞에 window 생략가능!)
	ex)document.getElementById('');

ex)eval()함수 특정문자열을 따옴표를 떼고 "객체"로 변환!(중요)

이벤트>사용자가 취한 어떤 특정 동작에 의해 발생하는 일종의 신호. 사건
	ex)버튼클릭, 하이퍼링크위로 마우스 올림, 폼양식 필드의 내용 입력
load : 브라우저에 웹문서가 로딩이 되었을 때
unload : 다른 웹페이지로 이동할 때
click : 하이퍼링크나 버튼 클릭
mouseover : 버튼, 하이퍼링크나 이미지위에 마우스 올림
select : 폼(내용받아서 서버로 보냄) 입력 양식 선택
change : 폼 입력 양식의 값변경

on~으로 시작하는 태그의 속성(attribute)이 이벤트 핸들러
	
	<DOM>
브라우저로 읽혀지는 모든 html문서는 "Document객체"(돔트리 구조)로 취급함
	->Document객체는 script안에서 페이지안의 모든 html태그에 접근할 수 있는 방법("메소드")을 제공해줌
		document.getElementById("pass");
	->구성요소(태그)마다 "id가 있어야" 접근가능

html도 xml처럼 돔트리로 되어있다("body는 태그의 자식~(아래), 속성은 옆으로 그림(자식X)") 
	네모(태그) 하나하나가 Node다.
	 
         <window객체>(browser 창)
		|
        <Document객체>(html 문서)
		|
	html(=root element)
	|		|
	head		body
	title script	h1 input

////
("")는 false 아무것도 없기 때문에
("0")는 true
(0)은 false 0아닌건 true
("" == true)는 false

////
파라메터보다 아규먼츠를 많이주면 알아서 앞에만 쓰이지만 부족하면 실행되지 않는다!!!
("0" == true)는 false

////for in으로 루프! for : 이 아님~ 108p
// 키값 in JSON 하면 키가 존재하는지 여부가 true/false로 나온다. 178p
////p.145 타이머 함수
setTimeout(function, ms); //ms후 한번시행	clearTimeout(id);
setInterval(function, ms);			clearInterval(id);

//DOM : JavaScript를 활용해서 html을 Dynamic하게 조작할수 있게 해줌!!!!