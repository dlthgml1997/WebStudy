기본으로 import되는 java.lang패키지
	그 안의 Object클래스는 모든 클래스의 최상위 부모 클래스
(toString():객체 대표 스트링 출력, hashCode(), equals(Object o):객체의 "내용(값)" 비교) 등을 오버라이드에서 활용한다)

String은 참조형중 "유일하게 new키워드를 사용하지 않고 객체생성 가능" + 스트링클래스의 "원본은 항상 수정이 안됨"
	contains(), equalsIgnoreCase()
	나중에 빌더와 버퍼 차이(쓰레드할)

메소드를 호출하기 위해 8가지 기본형타입를 참조형타입으로 포장(boxing)해서 변환한 클래스. -Wrapper class 
	<->unboxing작업
참고) 컨트롤쉬프트o로 임포트

int>Integer, char>Character

인터페이스끼리도 상속가능 extends~~
interface A {메서드 a개}
^extends
interface B {메서드 b개}
^implements
class C : a+b개의 모든 추상메서드를 완성해야 한다. 

<Collection API>=List, Set, Map : 여러개의 데이터를 저장할 수 있는 것들
	java.util패키지에 정의되어 있음

		List<E>			Set<E>			Map<K,V>	꺽쇠는 제네릭프로그래밍, 맞춰주어야 함
순서		O			X			X

(값)중복		O			X			X

클래스		Vector * (->스택)			HashSet			Hashtable *
		ArrayList	***					HashMap
		LinkedList 등	
					SortedSet		SortedMap
					->TreeSet(정렬된 세트)	->TreeMap(정렬된 맵)

클래스이름을 보고 어떤카테고리인지 알수 있어야한다. 
더 성능이 좋은 새로나온 아래쪽의 클래스들을 추천~

Map은 파이썬의 딕셔너리 같은 것 key-value쌍 key는 겹치면(중복되면) 안됨!! value는 중복가능!

컴파일이 끝나고 실행파일이 나오면 데이터의 타입이 결정되는 경우
	실행을 해야지 타입이 결정되는 경우(그 이전에는 변경 가능)-"객체 생성시=실행시"!!! 이 때(런타임) X의 타입이 결정된다! 