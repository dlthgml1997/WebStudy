DB구성요소 3가지 : 개체,속성,관계
DBMS
-------------------------
CSV(콤마), JSON(키-밸류)등의 형식으로 data를 import할수 있다.
-------------------------
SQL명령어의 종류 : DDL,DML,DCL,TCL -> 0812

TCL(트랜젝션 제어어) : <COMMIT>, <ROLLBACK>, <SAVEPOINT>
Transaction : 하나의 단위로 묶여서 처리되어야 하는 것
		start transaction; ~ commit또는 rollback까지
-------------------------
<<SELECT문(검색):>>
	SELECT (DISTINCT) 컬럼명 (ALIAS)
	FROM 테이블명;

	쿼리문 실행 순서
	5*[SELECT] : 열
	1*[FROM] : 테이블
	2-WHERE : 가로로 자름! "(일반)조건"에 따라(작업 대상 줄만 추려냄)
	3-GROUP BY : 대상을 열 값에 따라 그룹지음
	4-HAVING : "그룹의 조건" - 집계함수로 조건을 보통체크
	6-ORDER BY : 정렬한다.
	(ALIAS AS : "별칭" 공백있을 경우""필수)
	
	연산자) in, between, is, like
-------------------------
조인(이너-equi , 아우터-left/right, 셀프-self)>

inner join은 null이 빠짐
----------------------------------------------------***********
outer join은 null도 들어감

시험에서 틀림!!!!>
deptid기준으로 empid가 null인 것도 되는 것
select d.deptid, d.deptname, e.empid
from emp e right join dept d -- left join 아님!
on e.deptid = d.deptid;
----------------------------------------------------***********
=은 1개 in은 여러개중
sub query는 먼저 실행 되어 main query의 조건으로 사용됨
------------------------
	<View>기존테이블 바탕으로 생성되는 "가상테이블" -> 보안상의 이유, 자주 사용되는 복잡한 쿼리 쓰도록
물리적인 저장공간을 가지지 않음(데이터 직접 소유 X)
하나 이상의 테이블로 부터 만들어짐
뷰를 access하게 되면 간접적으로 테이블을 access하게 됨(뷰에서 수정 하면 원래 테이블이 수정됨)
선택된 칼럼 정보만 참조 가능(보안)

"생성" :	Create[or replace] view 뷰이름
	As (sub-query : 테이블과 동일하게 사용); 

나중에 Select 뷰이름 하면 View가 메모리에 올라와서 사용할 수 있다. (뷰 사용은 테이블과 동일)


---------------
Group By와 Distinct의 차이> 
count()시 
group by는 그룹 안 각각의 개수를, distinct는 중복을 제외한 값 전체의 개수를 뽑아올수 있게된다!!!!!

select name, count(name) from table group by name;
select count(distinct name) from table;
-------
count(*)는 null 포함, count(표현식)은 null이 아닌값만
