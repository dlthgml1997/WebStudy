예시문제>
토마토 bfs (dfs) 숨바꼭질
햄버거 소수
색종이 붙이기


AD 대비>
시뮬레이션(구현)
Powerset : 반복문X, <바이너리>카운팅(원소64까지 long으로 가능)O, 재귀
순열 : 반복문(동적대응이 안됨)X, 재귀함수(1.백트래킹X 2.응용 or 완전탐색의 <swap>)
조합 : 반복문X, 재귀함수(점화식, 완전탐색<perm>)
>DFS : 반복문 스택, 재귀(콜스택 활용)
>BFS : 반복문 큐, 재귀함수
재귀함수 : for, while등 대신 사용해보자

이진탐색, 정렬 문제들

정올은 틀린 테케 알려줌
백준은 분류 잘되어 있음(알고리즘별 로)
SWEA는 D4,D5

시간절약팁> 
입력60 BufferedReader -> parsing & StringTokenizer(쪼갤필요없으면 쪼개지말기, 데이터의 폭이 같을 경우는 -> charAt(index)활용)
출력20 StringBuilder
알고리즘설계기법10 DQ,DP등
최적화1 % / * +- ++-- 순으로 속도 차이가 난다. 	ex) x%2==0 보다 x&2==0으로 짝수체크
1억번 연산은 대충 1초

생각순서>
1.완전탐색(브루트포스) : 반복문 / 재귀(dfs) / bfs
						그래프, 트리, 2차원 배열(한칸 한칸이 정점인 그래프라고 생각)
	입력의 크기가 할만하다 싶으면 우선 완탐
	그 후 가지치기
2.