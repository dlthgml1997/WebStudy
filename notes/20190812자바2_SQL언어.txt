	<데이터베이스=DB> a collection of related data = 서로 관련있는 데이터들의 모임
DB 관리 시스템=DBMS : 관리 프로그램들의 묶음 	ex)Oracle-MySQL, MS SQL (mysql은 데이터를 테이블(표)에 저장="관계형DB"), NoSQL등의 관계형아닌 빅데이터용 DB 등
		    장점:	"질의 처리"에 효율적인 저장구조 - 100L이상의 냉장고 검색 등이 쉬움
			데이터의 중복성과 불일치성 감소 - 여러군데 중복해서 저장하지 않고 한 데이터는 한곳에 저장
			데이터 보안 - 파일과 다르게 권한 체크 등을 한다
			백업과 복구
			일관된 데이터
			다양한 인터페이스
		    단점: 	비쌈

		<DB 시스템>
	사용자
	|
	응용프로그램(Java등)		사용자
			|		|
			<DBMS(매개체 역할)>							
				|	
				DB
	--------------------------------------------------
<SQL=DB언어> 쿼리(코드)는 대소문자 상관 X 값은 대소문자를 구분
-DDL(데이터 정의어) -- **rollback/commit 불가!!!!
	"관리자(DBA)나 설계자"가 데이터간의 관계를 정의, 구조를 변경
	<CREATE table>
	create table 테이블이름(칼럼이름 칼럼데이터타입(크기) 칼럼제약조건,.. ,.. );
	INDEX도 create 할수 있다!!
	<ALTER table> add, modify, drop(컬럼 삭제), 새로운 칼럼 정의 등
	alter table 테이블이름 뭐할건지
		add (컬럼),  drop(컬럼 삭제) 등 
	<DROP table> = Table을 다 날림~!
	drop table 테이블이름;
	<TRUNCATE table> = Table은 남아있고 data는 다 날림~!
	truncate table 테이블이름;
	<COMMENT>
	<RENAME>

-DML(데이터 조작어) - 검색 등 -- **DML문장(update/insert/delete)은 취소=rollback(<->commit=확인)이 가능함!!!!
	"사용자"가 "응용프로그램(Java)나 질의어"로 실제 데이터를 검색,수정,삭제,변경
	<<SELECT문(검색):>>
		쿼리문 실행 순서
		5*[SELECT] : 열
		1*[FROM] : 테이블
		2-WHERE : 가로로 자름! "(일반)조건"에 따라(작업 대상 줄만 추려냄)
		3-GROUP BY : 대상을 열 값에 따라 그룹지음
		4-HAVING : "그룹의 조건" - 집계함수로 조건을 보통체크
		6-ORDER BY : 정렬한다.
		(ALIAS AS : "별칭" 공백있을 경우""필수)
		연산자
	<INSERT문(투플 삽입)>
	<DELETE문(삭제)> = Table은 남아있고 data를 삭제~!(truncate와 같지만 rollback가능)
		DELETE FROM 테이블 WHERE 조건;
	<UPDATE문(수정)>
		UPDATE 테이블 set 컬럼 WHERE 조건;
	<MERGE>

-DCL(데이터 제어어) 
	"관리자(DBA)"가 데이터의 보안,무결성,데이터복구,병행수행제어(여러개가 하나의 데이터에 접근했을 경우),사용자권한설정
	취소=rollback(<->commit=확인)
	<GRANT> 권한 부여
	<REVOKE> 권한 철회
-------------------------------------------

-관리자 DBA : 전체 환경구성과 운영 관련 책임자
-설계자 : 요구사항대로 개념적/물리적 스키마의 설계
-사용자(End User) : 질의 및 갱신 연산
-시스템 분석가/응용프로그램 개발자 : 사용자를 위한 프로그램 개발

--------------------------------------------
	<DB단위> : Field -> Record -> Table
DBMS와 함께 설치된 "DB(창고)"내부에 관련있는 데이터끼리 모아논 것은 ""Table"(창고안의 박스)="Relation"(2차원의표)=객체 관계형 DB"(고객정보 전체) 
테이블안의 "데이터 1건(1줄)"(고객 1명) = "Record"(=투플,행)
데이터 1건의 "내용 1칸"(고객의 id) = "Field"(=속성(애트리뷰트), 열(column), 데이터항목)

	<MYSQL 워크벤치>		
Developer Default로 my sql 설치 -1체크 - standalone - use legacy - PW설정(manager) - add user(scott-tiger-수업용, tommy-lion-과제용) - Connect to server(PW입력)
자바 프로그램이 port3306으로 소켓을 통해서 클라이언트로써 DB(서버역할)와 통신 JDBC API
*스키마(사용자) - 스키마 별로 DB생성가능
스키마이름.테이블이름
	
	Database connect to database - 스키마 scott추가 utf-8로! 
	- 스키마를 꼭 선택을 하고 작업(또는 use 스키마;실행) - 테이블 추가 - drop table(테이블 삭제)
	
	new SQL file이 새로운 작업 공간!! - 테이블의 DDL : 인서트할때 만드는 형식 : 컬럼이름 타입 제약조건 
-------------------------------------------------------------------
-- 주석
컨트롤+엔터로 한줄을 수행/ 컨트롤+쉬프트+엔터는 전체수행

	<중요 함수>
*round(숫자, 자릿수) -- ceiling, floor
*concat
*substring('문자열', 시작위치, 개수) -- 인덱스는 1부터 시작!, 뒤에 것은 인덱스 아니고 개수
*ifnull, coalesce
집계함수 5개
*now() = sysdate(), curdate() = currentdate()
날짜함수
*format(숫자, 소수이하자리수) -- 숫자를 #,###,###.## 이런식으로 돈 처럼 표시



cast( , ) 형변환
to_char(hdate, 'yyyy-mm-dd') 오라클에서 문자형식에맞추어 생성하는 함수
