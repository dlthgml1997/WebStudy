ES5에서 "use strict";가 맨위에 있으면 문법체크를 철저히 함. ES6에서는 기본상태임
js ES6문법 사용>
	1. 변수 선언
		var에서 let이 됨(상수는 const가 됨)
	2. 변수 사용 scope
		for(여기서 선언된 변수는 loop안에서만 사용되는 지역변수)
	3. 화살표함수
	4. export-import
		.js 모듈화를 위한 기능(자바에서 .class파일들이 모듈화 되어있어 재사용이 되는 것과 유사)

	<Component> 재사용 가능한 객체. 화면이 꼭 있어야함!
 (Vue도 Component중의 하나. Vue에서 관리하는 대상안에 Component를 레고처럼 끼워넣어 완성!)
html 안에서 정의하고 "V"부분에서 가져다 사용
	template(화면): 버튼 등
	data:
	method:

//components안의 data는 꼭 function리턴 형식으로 써야한다!!!!
//컴포넌트 2가지 꼴 알아두기!
	global은 Vue.component(이름,내용) local은 Vue객체 내부에 components:{이름 :{내용}}

div안에서 component를 사용하게 되면 그 div를 관리하는 vm이 상위객체가 되고 component가 하위 객체가 된다.
	Vue(vm)는 상위객체				
	  |	      | 
  관련 Component들("global 또는 local" 2가지)이 하위 객체가됨

	<그냥 객체간 전달>
		상위(부모)객체
                data  	  |       	    ^ this.$emit();
         [props속성]  v      	    |    event
		하위(자식)객체

	<EventBus객체를 통한 전달>
		          		     (Vue객체)
	A      --->          		     EventBus	   	      --->   B
	     emit()발생		  		                  on()
bus.$emit('발생할 이벤트이름', 전달할 데이터)	    bus.$on('처리할 이벤트이름', 실행할 함수(전달받은 데이터))